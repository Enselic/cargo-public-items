name: CI

on:
  workflow_call: # From .github/workflows/Release-*.yml, .github/workflows/Nightly.yml
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  all-jobs:
    if: always() # Otherwise this job is skipped if any matrix job fails
    name: all-jobs
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - check-version-info
    steps:
      - run: jq --exit-status 'all(.result == "success")' <<< '${{ toJson(needs) }}'

  lint:
    strategy:
      fail-fast: false
      matrix:
        variant:
          - { workspace: cargo-public-api, name: Ubuntu, os: ubuntu-latest }
          - { workspace: rustdoc-json,     name: Ubuntu, os: ubuntu-latest }
          - { workspace: rustup-toolchain, name: Ubuntu, os: ubuntu-latest }

    name: lint ${{ matrix.variant.workspace }} (${{ matrix.variant.name }} ${{ matrix.variant.protocol }})
    runs-on: ${{ matrix.variant.os }}
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt install shfmt
      - run: rustup install nightly --profile minimal
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-deny,cargo-audit
      - uses: Swatinem/rust-cache@v2
      - run: cargo version --verbose # Make it easier to debug version-specific issues
      - run: ./scripts/lint-workspace.sh ${{ matrix.variant.workspace }}

  test:
    strategy:
      fail-fast: false
      matrix:
        variant:
          - { workspace: cargo-public-api, name: Ubuntu,  os: ubuntu-latest,  protocol: git    }
          - { workspace: cargo-public-api, name: Ubuntu,  os: ubuntu-latest,  protocol: sparse }
          - { workspace: cargo-public-api, name: macOS,   os: macos-latest,   protocol: sparse }
          - { workspace: cargo-public-api, name: Windows, os: windows-latest, protocol: sparse }
          - { workspace: rustdoc-json,     name: Ubuntu,  os: ubuntu-latest,  protocol: sparse }
          - { workspace: rustdoc-json,     name: macOS,   os: macos-latest,   protocol: sparse }
          - { workspace: rustdoc-json,     name: Windows, os: windows-latest, protocol: sparse }
          - { workspace: rustup-toolchain, name: Ubuntu,  os: ubuntu-latest,  protocol: sparse }
          - { workspace: rustup-toolchain, name: macOS,   os: macos-latest,   protocol: sparse }
          - { workspace: rustup-toolchain, name: Windows, os: windows-latest, protocol: sparse }

    name: test ${{ matrix.variant.workspace }} (${{ matrix.variant.name }} ${{ matrix.variant.protocol }})
    runs-on: ${{ matrix.variant.os }}
    env:
      CARGO_REGISTRIES_CRATES_IO_PROTOCOL: ${{ matrix.variant.protocol }}
    steps:
      - uses: actions/checkout@v4
      - run: rustup install nightly --profile minimal
      - run: zsh --version || (sudo apt-get install -y zsh && zsh --version)
        if: runner.os != 'Windows' && matrix.variant.workspace == 'cargo-public-api'
      - uses: Swatinem/rust-cache@v2
      - run: ./scripts/test-workspace.sh ${{ matrix.variant.workspace }}
      - run: ./scripts/cargo-test-without-rustup.sh
        if: matrix.variant.workspace == 'cargo-public-api' && runner.os == 'Linux' # Fails on macOS (strangely) and Windows (expected)

  check-version-info:
    name: check version info
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo run --bin update-version-info
      - run: |
          [ -z "$(git diff)" ] || { echo "ERROR: You forgot to 'cargo run --bin update-version-info'" ; exit 1 ; }
