# Allows you to easily see how release notes will look if you make a release
# now. Automatically updated.
name: Preview release notes

on:
  workflow_dispatch:
  # We need to rebuild the release notes preview if PR titles or PR labels
  # changes (see .github/release.yml).
  pull_request_target:
    types: [edited, labeled, unlabeled]
  # Since the release notes depend on what is on the main branch, rebuild the
  # release notes preview if main change.
  push:
    branches: [main]

jobs:
  preview-release-notes:
    # if: github.repository == 'cargo-public-api/cargo-public-api' && (github.event_name != 'pull_request_target' || github.event.pull_request.merged == true)
    environment:
      name: preview-release-notes
      url: https://github.com/cargo-public-api/cargo-public-api.github.io/blob/main/release-notes-preview.md
    runs-on: ubuntu-latest
    permissions:
      contents: write # generate-notes
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cargo-public-api/cargo-public-api.github.io
          ssh-key: ${{ secrets.CARGO_PUBLIC_API_GITHUB_PAGES_DEPLOY_KEY }}
      - name: generate-notes
        run: |
          echo repo=${{ github.repository }} event_name=${{ github.event_name }} event=${{ github.event }}
          # Auto-generate release notes
          curl --request POST \
              --url ${{ github.api_url }}/repos/${{ github.repository }}/releases/generate-notes \
              --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
              --header 'content-type: application/json' \
              --data "{
                  \"tag_name\":\"main\",
                  \"target_commitish\":\"main\"
              }" | tee .response

          # Create header
          echo "## Preview of auto-generated release notes" > release-notes-preview.md

          # Create body
          cat .response | jq --raw-output .body | sed s/\\n/\n/g >> release-notes-preview.md

          # Make it easy to find what code to change to change the page
          echo -e "\n\n(This page was updated **$(date --iso-8601=seconds)** by \`${{ github.event_name }}\` via [Preview-release-notes.yml](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}))" >> release-notes-preview.md
      - name: commit
        run: |
          git config user.name "EnselicCICD"
          git config user.email "junta-pixlar0l@icloud.com"
          git add release-notes-preview.md
          git commit -m "Update release-notes-preview.md"
      - name: push
        run: |
          git push origin main
